#react js code
#Step-1 Esp32form.js
/*
import React, { useState, useEffect } from 'react';
import axios from 'axios';
import './Esp32form.css';

const Esp32form = () => {
  const [formData, setFormData] = useState({
    name: '',
    age: '',
    rollNumber: '',
    class: '',
    voltage: '',
    current: '',
    watt: '',
    average: ''
  });

  useEffect(() => {
    axios.get('http://192.168.1.29:3000/api/sendsensordata')
      .then(response => {
        const { voltage, current, watt, average } = response.data;
        setFormData(prevState => ({
          ...prevState,
          voltage,
          current,
          watt,
          average
        }));
      })
      .catch(error => {
        console.error('Error fetching sensor data', error);
      });
  }, []);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prevState => ({
      ...prevState,
      [name]: value
    }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    axios.post('http://localhost:8000/api/submit-form/', formData)
      .then(response => {
        console.log('Data submitted successfully', response);
      })
      .catch(error => {
        console.error('Error submitting data', error);
      });
  };

  return (
    <div className="form-container">
      <form onSubmit={handleSubmit}>
        <label htmlFor="name">Name</label>
        <input type="text" id="name" name="name" value={formData.name} onChange={handleChange} placeholder="Name" required />

        <label htmlFor="age">Age</label>
        <input type="number" id="age" name="age" value={formData.age} onChange={handleChange} placeholder="Age" required />

        <label htmlFor="rollNumber">Roll Number</label>
        <input type="text" id="rollNumber" name="rollNumber" value={formData.rollNumber} onChange={handleChange} placeholder="Roll Number" required />

        <label htmlFor="class">Class</label>
        <input type="text" id="class" name="class" value={formData.class} onChange={handleChange} placeholder="Class" required />

        <label htmlFor="voltage">Voltage</label>
        <input type="text" id="voltage" name="voltage" value={formData.voltage} onChange={handleChange} placeholder="Voltage" readOnly />

        <label htmlFor="current">Current</label>
        <input type="text" id="current" name="current" value={formData.current} onChange={handleChange} placeholder="Current" readOnly />

        <label htmlFor="watt">Watt</label>
        <input type="text" id="watt" name="watt" value={formData.watt} onChange={handleChange} placeholder="Watt" readOnly />

        <label htmlFor="average">Average</label>
        <input type="text" id="average" name="average" value={formData.average} onChange={handleChange} placeholder="Average" readOnly />

        <button type="submit">Submit</button>
      </form>
    </div>
  );
};

export default Esp32form;


/* EXAMPLE-2 in this code i need to refresh the webpage 
import React, { useState, useEffect } from 'react';

const Esp32form= () => {
  const [sensorData, setSensorData] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch('http://192.168.1.23:3000/api/sensordata');
        
        // Check for a 403 status code
        if (response.status === 403) {
          throw new Error('Unauthorized');
        }
  
        const data = await response.json();
        setSensorData(data);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };
  
    fetchData();
  }, []);
  

  return (
    <div>
      {sensorData ? (
        <div>
          <h2>Sensor Data</h2>
          <p>Voltage: {sensorData.voltage}</p>
          <p>Current: {sensorData.current}</p>
          <p>Watt: {sensorData.watt}</p>
          <p>Average: {sensorData.average}</p>
        </div>
      ) : (
        <p>No sensor data available</p>
      )}
    </div>
  );
};

export default Esp32form;
*/

/* EXAMPLE-3 this will fetch the data at regular interval whether as in the previous above code i need to refresh the webpage manually to see the data */
/*
import React, { useState, useEffect } from 'react';

const Esp32form= () => {
  const [sensorData, setSensorData] = useState(null);
useEffect(() => {
  const fetchData = async () => {
    try {
      const response = await fetch('http://192.168.1.29:3000/api/sendsensordata');
      
      // Check for a 403 status code
      if (response.status === 403) {
        throw new Error('Forbidden');
      }

      const data = await response.json();
      setSensorData(data);
    } catch (error) {
      console.error('Error fetching data:', error);
    }
  };

  // Fetch data initially
  fetchData();

  // Fetch data every 10 seconds
  const intervalId = setInterval(fetchData, 10000);

  // Clean up interval
  return () => clearInterval(intervalId);
}, []);

return (
  <div>
    {sensorData ? (
      <div>
        <h2>Sensor Data</h2>
        <p>Voltage: {sensorData.voltage}</p>
        <p>Current: {sensorData.current}</p>
        <p>Watt: {sensorData.watt}</p>
        <p>Average: {sensorData.average}</p>
      </div>
    ) : (
      <p>No sensor data available</p>
    )}
  </div>
);
};

export default Esp32form;
*/
#Step-2 Esp32form.css
.form-container {
    max-width: 400px;
    margin: 0 auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    background-color: #f9f9f9;
  }
  
  .form-container input {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  
  .form-container button {
    width: 100%;
    padding: 10px;
    background-color: #4CAF50;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  
  .form-container button:hover {
    background-color: #45a049;
  }
  
  .form-container label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
  }

#Step-3 Footer.js
import React from 'react'
function Footer() {
  return (

    <div className="container-fluid">
        <footer style={{
            backgroundColor:'#03011C',
            padding:100,
            display:'flex',
            justifyContent:'space-between',
        }}>
            <div>
                <h2 style={{ color:'#f5f5f5' , fontWeight:'500px' }}>Code school</h2>
                <p style={{color:'white', width:'400px'}}>Lorem Ipsum is simply dummy text of the printing and typesetting industry. dummy text of the printing and typesetting industry. </p>
            </div>
        
            <div>
                <h2 style={{ color:'#f5f5f5' , fontWeight:'500px' }}>Usefull links</h2>
                <ul style={{color:'white', 
                listStyle:'none',
                padding:0, 
                margin:0,
                display:'flex',
                flexDirection:'column',
                gap:'8px'

                }}>
                    <li><a href="#" style={{textDecoration:'none', color:'white'}}>Home</a></li>
                    <li><a href="#" style={{textDecoration:'none', color:'white'}}>Number</a></li>
                    <li><a href="#" style={{textDecoration:'none', color:'white'}}>Whatsapp</a></li>
                    <li><a href="#" style={{textDecoration:'none', color:'white'}}>Contact us</a></li>
                </ul>
            </div>

            <div>
                <h2 style={{ color:'#f5f5f5' , fontWeight:'500px' }}>Code school</h2>
                <p style={{color:'white', width:'200px'}}>Lorem Ipsum is simply dummy text of the printing and typesetting industry. </p>
            </div>

            <div>
                <h2 style={{ color:'#f5f5f5' , fontWeight:'500px' }}>Code school</h2>
                <p style={{color:'white', width:'200px'}}>Lorem Ipsum is simply dummy text of the printing and typesetting industry. </p>
            </div>

       </footer>
</div>
  )
}

export default Footer

#Step-4 Nav.js
import React from 'react'
import './Nav.css'

function Nav() {
  return (
    <nav style={{
      backgroundColor: 'white',
      display: 'flex',
      justifyContent: 'space-between',
      padding: '0 48px',
      boxShadow: '0 16px 8px 0 rgba(0,0,0,0.1)'
    }}>
      <div style={{
        display: 'flex',
        alignItems: 'center',
        gap: '8px',
      }}>
        <img src="./images/logo.jpeg" alt="Logo" width="60" />
        <a href="#" style={{
          textDecoration: 'none',
          color:'#323232',
          margin:'10px',
        }}><h1>Houston System</h1></a>
      </div>

      <ul style={{
        display: 'flex',
        listStyle: 'none',
        padding: 0,
        margin: 0,
        gap: '10px',
        alignItems: 'center'
      }}>
        <li style={{ display: 'flex', alignItems: 'center',padding:'16px 24px'  }}>
          <a href="#" style={{
            textDecoration: 'none',
            color: '#323232',
          }}>Home</a>
        </li>
        <li style={{ display: 'flex', alignItems: 'center',padding:'16px 24px'  }}>
          <a href="#" style={{
            textDecoration: 'none',
            color: '#323232',
          }}>Teachers</a>
        </li>
        <li style={{ display: 'flex', alignItems: 'center',padding:'16px 24px'  }}>
          <a href="#" style={{
            textDecoration: 'none',
            color: '#323232',
          }}>Holiday</a>
        </li>
        <li style={{ display: 'flex', alignItems: 'center' ,padding:'16px 24px' }}>
          <a href="#" style={{
            textDecoration: 'none',
            color: '#323232',
          }}>Login</a>
        </li>
        <li style={{ display: 'flex', alignItems: 'center', padding:'16px 24px' }}>
          <a href="#" style={{
            textDecoration: 'none',
            color: 'white',
            fontSize:17,
            background:'dodgerblue',
            padding:'16px 48px',
            borderRadius:4,

          }}>Talk to us</a>
        </li>
      </ul>
    </nav>
  )
}

export default Nav

#Step-5 Section.js
// TypingComponent.js
import React from 'react';
import { TypeAnimation } from 'react-type-animation';

const Section = () => {
  return (
    <div>
      <h1>Typing Animation Example</h1>
      <TypeAnimation
        sequence={[
          'Hello, world!', // Types 'Hello, world!'
          1000, // Waits 1s
          'Hello, React!', // Deletes 'Hello, world!' and types 'Hello, React!'
          1000, // Waits 1s
          'Hello, Type Animation!', // Deletes 'Hello, React!' and types 'Hello, Type Animation!'
          1000, // Waits 1s
          'Goodbye!', // Deletes 'Hello, Type Animation!' and types 'Goodbye!'
          1000, // Waits 1s
        ]}
        wrapper="span"
        cursor={true}
        repeat={Infinity}
      />
    </div>
  );
};

export default Section;


